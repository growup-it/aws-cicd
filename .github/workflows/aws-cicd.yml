name: AWS Workflow with Terraform & S3 Upload

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "ap-south-1"

permissions:
  id-token: write   # Required for OIDC JWT retrieval
  contents: read     # Required for repository checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::127214183072:role/aws-git-oidc
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve -no-color

      - name: Get S3 Bucket Name from Terraform Output
        id: get_bucket
        run: |
          # Disable bash command echoing
          set +x
          # Set Terraform automation flag for cleaner output.
          export TF_IN_AUTOMATION=1
          # Capture the raw output from Terraform.
          BUCKET_OUTPUT=$(terraform output -raw bucket_name -no-color)
          echo "Raw Terraform output: $BUCKET_OUTPUT"
          # Remove lines starting with [command] or containing ::debug:: and get the first line.
          BUCKET_NAME=$(echo "$BUCKET_OUTPUT" | sed -e '/^\[command\]/d' -e '/::debug::/d' | head -n 1)
          echo "Bucket name is: ${BUCKET_NAME}"
          # Set the step output for later steps.
          echo "bucket_name=${BUCKET_NAME}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload index.html to S3
        run: |
          echo "Uploading index.html to S3 bucket: ${{ steps.get_bucket.outputs.bucket_name }}"
          aws s3 cp ./index.html s3://${{ steps.get_bucket.outputs.bucket_name }}/index.html --region ${{ env.AWS_REGION }}




# # Sampl e workflow to access AWS resources when workflow is tied to branch
# # The workflow Creates static website using aws s3
# name: AWS workflow
# on:
#   push:
#     branches: [ "main" ]
# env:
#   BUCKET_NAME : "githubsample-64537323"
#   AWS_REGION : "ap-south-1"
# # permission can be added at job level or workflow level
# permissions:
#   id-token: write   # This is required for requesting the JWT
#   contents: read    # This is required for actions/checkout
# jobs:
#   S3PackageUpload:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Git clone the repository
#         uses: actions/checkout@v4

#       - name: configure aws credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: arn:aws:iam::127214183072:role/aws-git-oidc
#           audience: sts.amazonaws.com
#           aws-region: ${{ env.AWS_REGION }}
#       # Upload a file to AWS s3
#       - name:  Copy index.html to s3
#         run: |
#           aws s3api put-bucket-versioning \
#             --bucket "${{ env.BUCKET_NAME }}" \
#             --versioning-configuration Status=Enabled \
#             --region "${{ env.AWS_REGION }}"

#           aws s3api put-bucket-ownership-controls \
#             --bucket ${{ENV.BUCKET_NAME}} \
#             --ownership-controls '{
#                 "Rules": [
#                 {
#                     "ObjectOwnership": "BucketOwnerPreferred"
#                 }
#                 ]
#             }'

#           aws s3api get-bucket-ownership-controls --bucket ${{ENV.BUCKET_NAME}} --region ${{ env.AWS_REGION }}
#         #   aws s3 cp ./index.html s3://${{ env.BUCKET_NAME }}/index.html --region ${{ env.AWS_REGION }}
#         #   aws s3 ls s3://${{ env.BUCKET_NAME }}/index.html --region ${{ env.AWS_REGION }} --acl public-read

