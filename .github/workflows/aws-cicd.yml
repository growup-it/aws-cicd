name: AWS Workflow with Terraform & S3 Upload

on:
  push:
    branches:
      - main

env:
  AWS_REGION: "ap-south-1"

permissions:
  id-token: write   # Required for OIDC JWT retrieval
  contents: read     # Required for repository checkout

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::127214183072:role/aws-git-oidc
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve -no-color

      - name: Get S3 Bucket Name from Terraform Output
        id: get_bucket
        run: |
          # Disable bash command echoing so only command output is captured
          set +x
          # Set Terraform automation flag for cleaner output.
          export TF_IN_AUTOMATION=1
          # Capture the raw output from Terraform while redirecting error output.
          BUCKET_OUTPUT=$(terraform output -raw bucket_name -no-color 2>/dev/null)
          echo "Raw Terraform output: $BUCKET_OUTPUT"
          # Extract the line that starts with "my-static-site" (adjust if your naming is different)
          RAW_BUCKET_LINE=$(echo "$BUCKET_OUTPUT" | grep '^my-static-site' | head -n 1)
          # Extract the bucket name by taking the part before any "::" or colon character.
          BUCKET_NAME=$(echo "$RAW_BUCKET_LINE" | cut -d ':' -f1)
          echo "Bucket name is: ${BUCKET_NAME}"
          # Save the bucket name as the step output for later steps.
          echo "bucket_name=${BUCKET_NAME}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload index.html to S3
        run: |
          echo "Uploading index.html to S3 bucket: ${{ steps.get_bucket.outputs.bucket_name }}"
          aws s3 cp ./index.html s3://${{ steps.get_bucket.outputs.bucket_name }}/index.html --region ${{ env.AWS_REGION }}
            echo "Upload complete."

